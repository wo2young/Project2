<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.mes2.mappers.UserMapper">

	<!-- 로그인 시 아이디로 사용자 조회 -->
	<select id="findByLoginId" parameterType="string"
		resultType="kr.or.mes2.dto.UserDTO">
		SELECT
		user_id,
		login_id,
		password,
		name,
		user_role,
		created_at,
		updated_at
		FROM user_t
		WHERE login_id = #{loginId}
	</select>

	<!-- 마이페이지용 조회 -->
	<select id="findById" parameterType="int"
		resultType="kr.or.mes2.dto.UserDTO">
		SELECT user_id, login_id, name, user_role, password,
		created_at, updated_at
		FROM user_t
		WHERE user_id = #{userId}
	</select>

	<!-- 관리자: 사용자 전체 목록 조회 -->
	<select id="list" resultType="kr.or.mes2.dto.UserDTO">
		SELECT *
		FROM (
		SELECT ROWNUM AS rn, U.*
		FROM (
		SELECT USER_ID, LOGIN_ID,
		NAME, USER_ROLE,
		<!-- EMAIL, -->
		CREATED_AT
		FROM USER_T
		<where>
			<if test="q != null and q != ''">
				(LOWER(NAME) LIKE LOWER('%' || #{q} || '%')
				OR
				LOWER(LOGIN_ID) LIKE LOWER('%' || #{q} || '%'))
			</if>
		</where>
		ORDER BY USER_ID DESC
		) U
		)
		WHERE rn BETWEEN ( (#{p}-1) * #{size} + 1 )
		AND (#{p} * #{size})
	</select>

	<!-- 사용자 총 개수 -->
	<select id="count" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM USER_T
		<where>
			<if test="_parameter != null and _parameter != ''">
				AND (LOGIN_ID LIKE '%' || #{_parameter} || '%'
				OR NAME
				LIKE '%' || #{_parameter} || '%')
			</if>
		</where>
	</select>

	<select id="find" parameterType="int"
		resultType="kr.or.mes2.dto.UserDTO">
		SELECT user_id, login_id, name, user_role, password,
		created_at, updated_at
		FROM user_t
		WHERE user_id = #{id}
	</select>

	<!-- 리셋 토큰으로 사용자 조회 -->
	<select id="findByLoginIdAndToken" parameterType="map"
		resultType="kr.or.mes2.dto.UserDTO">
		SELECT user_id, login_id, name, user_role, reset_token,
		reset_expires
		FROM user_t
		WHERE UPPER(login_id) = UPPER(#{loginId})
		AND
		UPPER(reset_token) = UPPER(#{token})
		AND reset_expires > SYSDATE
	</select>

	<select id="existsByLoginId" parameterType="string"
		resultType="boolean">
		SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
		FROM USER_T
		WHERE LOGIN_ID = #{loginId}
	</select>

	<!-- 리셋 토큰으로 비밀번호 재설정 -->
	<update id="updatePasswordWithToken" parameterType="map">
		UPDATE user_t
		SET password = #{password},
		reset_token = NULL,
		reset_expires = NULL,
		updated_at = SYSDATE
		WHERE login_id = #{loginId}
		AND reset_token =
		#{token}
		AND reset_expires > SYSDATE
	</update>

	<!-- 관리자: 비밀번호 리셋 토큰 업데이트 -->
	<update id="updateResetToken">
		UPDATE USER_T
		SET RESET_TOKEN = #{token},
		RESET_EXPIRES = SYSDATE +
		(1/24)  <!-- ✅ 1시간 = 1/24일 -->
		WHERE USER_ID = #{id}
	</update>

	<!-- 토큰으로 비밀번호 재설정 -->
	<update id="resetWithToken">
		UPDATE USER_T
		SET PASSWORD = #{password},
		RESET_TOKEN =
		NULL,
		RESET_EXPIRES = NULL,
		UPDATED_AT = SYSDATE
		WHERE LOGIN_ID =
		#{loginId}
		AND RESET_TOKEN = #{token}
		AND RESET_EXPIRES > SYSDATE
	</update>

	<!-- 비밀번호 변경 -->
	<update id="updatePassword" parameterType="map">
		UPDATE user_t
		SET
		password = #{password},
		updated_at = SYSDATE
		WHERE user_id = #{userId}
	</update>

	<update id="clearResetByUserId" parameterType="int">
		UPDATE USER_T
		SET RESET_TOKEN = NULL,
		RESET_EXPIRES = NULL
		WHERE USER_ID = #{userId}
	</update>

</mapper>
