<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.mes2.mapper.DashboardMapper">

	<!-- 1️⃣ 오늘 요약 (양품 + 불량) -->
	<select id="selectTodaySummary"
		resultType="kr.or.mes2.dto.DashboardDTO">
		SELECT
		NVL(SUM(GOOD_QTY), 0) AS goodQty,
		NVL(SUM(DEFECT_QTY), 0) AS defectQty
		FROM PRODUCTION_RESULT
		WHERE
		TRUNC(WORK_DATE) =
		TRUNC(SYSDATE)
	</select>

	<!-- 2️⃣ 최근 7일 생산량 -->
	<select id="selectProdLast7"
		resultType="kr.or.mes2.dto.DashboardDTO">
		SELECT
		TO_CHAR(d, 'MM-DD') AS label,
		NVL(SUM(r.GOOD_QTY), 0)
		AS value
		FROM (
		SELECT TRUNC(SYSDATE) - LEVEL + 1 AS d
		FROM DUAL
		CONNECT
		BY LEVEL &lt;= 7
		) d
		LEFT JOIN PRODUCTION_RESULT r
		ON TRUNC(r.WORK_DATE)
		= d.d
		GROUP BY d
		ORDER BY d
	</select>

	<!-- 이번달 목표 vs 실적 -->
	<select id="selectTargetVsActualMonth"
		resultType="kr.or.mes2.dto.DashboardDTO">

		WITH cal AS (
		SELECT TRUNC(SYSDATE,'MM') + LEVEL - 1 AS d
		FROM dual
		CONNECT BY LEVEL &lt;= (LAST_DAY(SYSDATE) -
		TRUNC(SYSDATE,'MM') + 1)
		),
		actual_d AS (
		SELECT TRUNC(WORK_DATE) AS d,
		SUM(GOOD_QTY) AS qty
		FROM PRODUCTION_RESULT
		WHERE TRUNC(WORK_DATE,'MM')
		= TRUNC(SYSDATE,'MM')
		GROUP BY TRUNC(WORK_DATE)
		),
		tgt_d AS (
		SELECT
		TRUNC(START_DATE) AS start_d,
		TRUNC(END_DATE) AS end_d,
		TARGET_QTY
		FROM
		PRODUCTION_TARGET
		WHERE TRUNC(START_DATE,'MM') = TRUNC(SYSDATE,'MM')
		OR
		TRUNC(END_DATE,'MM') = TRUNC(SYSDATE,'MM')
		),
		tgt_cal AS (
		SELECT c.d,
		SUM(t.TARGET_QTY / NULLIF((t.END_D - t.START_D + 1),0)) AS tgt_per_day
		FROM cal c
		JOIN tgt_d t ON c.d BETWEEN t.START_D AND t.END_D
		GROUP BY
		c.d
		),
		wk AS (
		SELECT d, TO_CHAR(d, 'W') AS w FROM cal
		)
		SELECT
		'W' || w.w
		AS label,
		NVL(SUM(tc.tgt_per_day), 0) AS targetQty,
		NVL(SUM(a.qty), 0)
		AS resultQty,
		NVL(ROUND(
		CASE
		WHEN SUM(tc.tgt_per_day) = 0 THEN 0
		ELSE (SUM(a.qty) / SUM(tc.tgt_per_day)) * 100
		END, 1), 0) AS percent
		FROM cal c
		JOIN wk w ON w.d = c.d
		LEFT JOIN tgt_cal tc
		ON tc.d = c.d
		LEFT JOIN
		actual_d a ON a.d = c.d
		GROUP BY w.w
		ORDER BY
		MIN(c.d)

	</select>

	<!-- 불량 현황 (월별 불량유형별 비율) -->
	<select id="selectDefectPieMonth"
		resultType="kr.or.mes2.dto.DashboardDTO">
		SELECT
		NVL(DEFECT_TYPE, '기타') AS label,
		SUM(NVL(DEFECT_QTY,
		0)) AS value
		FROM QUALITY_DEFECT
		WHERE TRUNC(CREATED_AT, 'MM') =
		TRUNC(SYSDATE, 'MM')
		GROUP BY DEFECT_TYPE
		ORDER BY value DESC
	</select>

	<!-- 재고 현황 -->
	<select id="selectInventoryStatus"
		resultType="kr.or.mes2.dto.DashboardDTO">
		SELECT
		i.ITEM_NAME AS label,
		NVL(SUM(
		CASE
		WHEN t.TXN_TYPE =
		'IN' THEN t.QTY
		WHEN t.TXN_TYPE = 'OUT' THEN -t.QTY
		ELSE 0
		END
		), 0) AS
		value
		FROM ITEM_MASTER i
		LEFT JOIN INVENTORY_TRANSACTION t
		ON i.ITEM_ID =
		t.ITEM_ID
		GROUP BY i.ITEM_NAME
		ORDER BY i.ITEM_NAME
	</select>

	<!-- 설비별 가동률 -->
	<select id="selectEquipmentOEE"
		resultType="kr.or.mes2.dto.DashboardDTO">
		SELECT
		e.EQUIP_CODE AS label,
		ROUND(
		100 * SUM(CASE WHEN
		e.EQUIP_STATUS = 'RUNNING' THEN 1 ELSE 0 END)
		/ NULLIF(COUNT(*), 0),
		1
		)
		AS value
		FROM EQUIPMENT e
		GROUP BY e.EQUIP_CODE
		ORDER BY e.EQUIP_CODE
	</select>

	<!-- 7️⃣ 승인 요청 상태 -->
	<select id="selectApprovalStatus"
		resultType="kr.or.mes2.dto.DashboardDTO">
		SELECT
		STATUS AS label,
		COUNT(*) AS value
		FROM
		APPROVAL_REQUEST
		GROUP BY STATUS
		ORDER BY STATUS
	</select>

	<!-- ✅ 챗봇용: 오늘 생산량 -->
	<select id="getTodayProduction" resultType="int">
		SELECT
		NVL(SUM(GOOD_QTY), 0)
		FROM PRODUCTION_RESULT
		WHERE TRUNC(WORK_DATE) =
		TRUNC(SYSDATE)
	</select>

	<!-- ✅ 챗봇용: 오늘 불량 수량 -->
	<select id="getTodayDefect" resultType="int">
		SELECT
		NVL(SUM(DEFECT_QTY), 0)
		FROM PRODUCTION_RESULT
		WHERE TRUNC(WORK_DATE) =
		TRUNC(SYSDATE)
	</select>

	<!-- ✅ 챗봇용: 총 재고 수량 -->
	<select id="getInventorySummary" resultType="int">
		SELECT NVL(SUM(
		CASE
		WHEN TXN_TYPE = 'IN' THEN QTY
		WHEN TXN_TYPE = 'OUT' THEN -QTY
		ELSE 0
		END
		), 0)
		FROM INVENTORY_TRANSACTION
	</select>

	<!-- ✅ 챗봇용: 설비 상태 -->
	<select id="getEquipmentStatus" resultType="string">
		SELECT
		CASE
		WHEN
		COUNT(*) = SUM(CASE WHEN EQUIP_STATUS = 'RUNNING' THEN 1 END)
		THEN '모든
		설비가 정상 가동 중'
		ELSE '일부 설비 점검 중'
		END AS STATUS_MSG
		FROM EQUIPMENT
	</select>

</mapper>
